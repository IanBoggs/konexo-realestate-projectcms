@model CaseSearchParameters
@{
    ViewData["Title"] = "Case Search";
}

@section Scripts {
@{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}

<div>
    <h1 class="display-6">Case Finder</h1>


    <div class="form-group">
        <form id="SearchForm" class="form-inline">
            
            @Html.DropDownListFor(m => m.SearchType,
            Model.SearchType.ToSelectList()
            ,"Select Type Of Search",new { @id="searchFormSearchType", @class ="form-control mb-2 mr-sm-2 form-control-sm" })
            <div class="input-group mb-2 mr-sm-2">
                
                @Html.EditorFor(x => x.SearchTerm,new {htmlAttributes = new { @id="searchFormSearchTerm",@class ="form-control form-control-sm",placeholder = "Enter search term" }})
            </div>
            <div class="form-check mb-2 mr-sm-2">
                @Html.EditorFor(model => model.ExactMatch,new { @id="searchFormExactMatch", @class ="form-check-input form-control-sm" })
                <label class="form-check-label" for="searchFormExactMatch">&nbsp;Exact Match ?</label>
            </div>
            
            <input id="btnSearch" type="button" class="btn btn-primary" value="Search" />
        </form>
    </div>

    <div id="resultArea">
    </div>
</div>
<script>

    $('#btnSearch').on('click', function (e) {
        var formData = $('#SearchForm').serialize()
        GetSearchResult(formData);
    });

    function GetSearchResult(filters) {
        $.ajax({
            url: '/Cases/CaseSearchResult',
            type: 'POST',
            cache: false,
            async: true,
            dataType: "html",
            data: filters
        })
            .done(function (result) {
                $('#resultArea').html(result);
            }).fail(function (xhr) {
                console.log('error : ' + xhr.status + ' - '
                    + xhr.statusText + ' - ' + xhr.responseText);
            });
    }</script>
